parameters:

  command_bus.queue_name: culturefeed-udb3
  resque.command.bus.event_command_context_set: broadway.command_handling.context
  culturefeed_udb3.prince_binary_location: '/usr/local/bin/prince'
  culturefeed_udb3.cdb_xml_namespace_uri: 'http://www.cultuurdatabank.com/XMLSchema/CdbXSD/3.3/FINAL'

services:

  # General
  culturefeed_udb3.entity_iri_generator_factory:
    class: Drupal\culturefeed_udb3\Factory\EntityIriGeneratorFactory
    arguments: ['@config.factory']
  culturefeed_udb3.eventstore_payload_serializer:
    class: CultuurNet\UDB3\EventSourcing\PayloadManipulatingSerializer
    factory: [CultuurNet\UDB3\BackwardsCompatiblePayloadSerializerFactory, createSerializer]
  culturefeed_udb3.format_setter:
    class: Drupal\culturefeed_udb3\StackMiddleware\FormatSetter
    tags:
      - { name: http_middleware, priority: 201, responder: true }
  culturefeed_udb3.iri_generator:
    class: Drupal\culturefeed_udb3\IriGenerator
    arguments: ['@url_generator', '@config.factory']
  culturefeed_udb3.route_provider_subscriber:
    class: Drupal\culturefeed_udb3\EventSubscriber\RouteProviderSubscriber
    arguments: ['@module_handler']
    tags:
      - { name: event_subscriber }
  culturefeed_udb3.serialize:
    class: Broadway\Serializer\SimpleInterfaceSerializer
  culturefeed_udb3.simple_path_generator:
    class: CultuurNet\UDB3\Media\SimplePathGenerator
  culturefeed_udb3.uuid_generator:
    class: Broadway\UuidGenerator\Rfc4122\Version4Generator

  # Event stream
  culturefeed_udb3.event_stream_metadata_enricher:
    class: Broadway\EventSourcing\MetadataEnrichment\MetadataEnrichingEventStreamDecorator
    calls:
      - [registerEnricher, ['@culturefeed_udb3.execution_context_metadata_enricher']]
  culturefeed_udb3.execution_context_metadata_enricher:
    class: CultuurNet\UDB3\EventSourcing\ExecutionContextMetadataEnricher

  # Command bus
  culturefeed_udb3.command_bus_event_dispatcher:
    class: Broadway\EventDispatcher\EventDispatcher
    calls:
      - [addListener, ['%resque.command.bus.event_command_context_set%', ['@culturefeed_udb3.execution_context_metadata_enricher', 'setContext']]]
  culturefeed_udb3.event_command_bus:
    class: CultuurNet\UDB3\CommandHandling\ResqueCommandBus
    arguments: ['@culturefeed_udb3.main_command_bus', '%command_bus.queue_name%', '@culturefeed_udb3.command_bus_event_dispatcher']
    calls:
      - [setLogger, ['@culturefeed_udb3.logger.command_bus']]
      - [subscribe, ['@culturefeed_udb3.event_command_handler']]
      - [subscribe, ['@culturefeed_udb3.place_command_handler']]
      - [subscribe, ['@culturefeed_udb3.saved_searches_command_handler']]
      - [subscribe, ['@culturefeed_udb3.media_manager']]
      - [subscribe, ['@culturefeed_udb3.bulk_label_offer_command_handler']]
    tags:
      - { name: 'service_collector', tag: 'culturefeed_udb3.command_bus.subscriber', call: 'subscribe' }
  culturefeed_udb3.event_command_bus_subscriber:
    class: Drupal\culturefeed_udb3\EventSubscriber\EventCommandBusSubscriber
    arguments: ['@culturefeed_udb3.event_command_bus', '@culturefeed.current_user', '@culturefeed.user_credentials']
    tags:
      - { name: event_subscriber }
  culturefeed_udb3.main_command_bus:
    class: CultuurNet\UDB3\CommandHandling\SimpleContextAwareCommandBus

  # Central event bus where domain events are published to. You can subscribe
  # your services to the event bus by tagging them with
  # 'culturefeed_udb3.event_bus.subscriber'
  culturefeed_udb3.event_bus:
    class: CultuurNet\UDB3\SimpleEventBus
    factory: culturefeed_udb3.event_bus.factory:get
  culturefeed_udb3.event_bus.factory:
    class: Drupal\culturefeed_udb3\Factory\EventBusFactory

  # Replay event bus where domain events are published to.  This event bus is used by the drush replay command to allow
  # adding subscribers manually.
  culturefeed_udb3.replay_event_bus:
    class: CultuurNet\UDB3\SimpleEventBus

  # Loggers.
  culturefeed_udb3.logger.channel.udb2:
    parent: logger.channel_base
    arguments: ['udb2']
  culturefeed_udb3.logger.command_bus.factory:
    class: Drupal\culturefeed_udb3\Factory\LoggerCommandBusFactory
    arguments: ['@config.factory', '@logger.channel.culturefeed']
  culturefeed_udb3.logger.command_bus:
    class: Monolog\Logger
    factory: culturefeed_udb3.logger.command_bus.factory:get

  # Filters.
  culturefeed_udb3.description_filter.strip_source:
    class: CultuurNet\UDB3\StringFilter\StripSourceStringFilter
  culturefeed_udb3.description_filter.tidy:
    class: CultuurNet\UDB3\StringFilter\TidyStringFilter

  # Access.
  culturefeed_udb3.edit_access_check:
    class: Drupal\culturefeed_udb3\Access\EditAccess
    arguments: ['@culturefeed.current_user', '@culturefeed.user_credentials', '@culturefeed_udb3.udb2_entry_api_improved.factory']
    tags:
      - { name: access_check, applies_to: _udb3_edit_acces_check }
